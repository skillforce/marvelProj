{"version":3,"sources":["components/ErrorMsg/ErrorMsg.module.scss","components/appHeader/AppHeader.tsx","resources/img/thor.jpeg","resources/img/mjolnir.png","services/MarvelService.tsx","components/preloader/preloader.tsx","components/ErrorMsg/error.gif","components/ErrorMsg/ErrorMsg.tsx","components/randomChar/RandomChar.tsx","resources/img/abyss.jpg","components/charList/char/Char.tsx","components/charList/CharList.tsx","components/skeleton/Skeleton.tsx","components/charInfo/CharComicsItem/CharComicsItem.tsx","components/charInfo/CharInfo.tsx","resources/img/vision.png","components/errorBoundary/ErrorBoundary.tsx","components/app/App.tsx","index.tsx"],"names":["module","exports","AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","character","name","description","thumbnail","urls","comics","correctThumbNail","path","extension","correctComicsItems","items","length","slice","homePage","wikiUrl","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorImg","s","ErrorMsg","src","error","alt","RandomChar","props","state","char","loading","timerId","marvelService","onCharLoaded","setState","updateChar","Math","floor","random","then","catch","onError","this","clearInterval","isLoading","errorMsg","onClick","mjolnir","Component","View","newImgStyle","thor","target","Char","img","setSelectedChar","notAvailableImg","activeItem","charId","abyss","CharList","charactersData","pageOffset","charEnded","componentDidMount","updateCharListItem","onClickLoadMoreBtnHandler","prevProps","prevState","correctBtnClassName","t","isError","disabled","Skeleton","CharComicsItem","CharInfo","snapshot","isErrorMsg","ViewCharInfo","comicsItems","i","correctImgClass","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb824f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorImg\":\"ErrorMsg_ErrorImg__GOfZi\"};","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","export class MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = '0683f9118f5881e432d90247cd0fc519';\r\n    _baseOffset = 210\r\n\r\n\r\n    getResource = async (url: string) => {\r\n        const res = await fetch(url)\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json()\r\n    }\r\n\r\n\r\n    getAllCharacters = async (offset:number=this._baseOffset) => {\r\n        const res: any = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&apikey=${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id: number) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?apikey=${this._apiKey}`);\r\n        return this._transformCharacter(res)\r\n    }\r\n\r\n    _transformCharacter = (res: any) => {\r\n        let character = res.data ? res.data.results[0] : res\r\n        const {name, description, thumbnail, urls, id, comics} = character\r\n        const correctThumbNail = `${thumbnail.path}.${thumbnail.extension}`\r\n\r\n        const correctComicsItems = comics.items.length > 10 ? comics.items.slice(0, 10) : comics.items\r\n        const correctDescription = description ? `${description.slice(0, 210)}...` : 'There is no description for this character'\r\n\r\n        return {\r\n            name,\r\n            description: correctDescription,\r\n            thumbnail: correctThumbNail,\r\n            homePage: urls[0].url,\r\n            wikiUrl: urls[1].url,\r\n            id,\r\n            comics: correctComicsItems\r\n        }\r\n    }\r\n\r\n\r\n}","export const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}}\r\n             width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\nimport s from './ErrorMsg.module.scss';\r\n\r\nconst{ErrorImg}=s;\r\n\r\n\r\nexport const ErrorMsg = () => {\r\n    return <img className={ErrorImg} src={error} alt={'errorMsg'}/>\r\n}","import './randomChar.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport {Component} from 'react';\nimport {MarvelService} from '../../services/MarvelService';\nimport Spinner from '../preloader/preloader';\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\nimport React from 'react';\n\n\ntype thumbNailType = {\n    path: string\n    extension: string\n}\ntype UrlType = {\n    type: string\n    url: string\n}\nexport type CharType = {\n    name: null | string\n    description: null | string\n    thumbnail: string | null\n    homePage: string | null\n    wikiUrl: string | null\n    id: number | null\n}\n\ntype RandomCharStateType = {\n    char: CharType\n    loading: boolean\n    error: boolean\n}\n\nclass RandomChar extends Component<{}, RandomCharStateType> {\n\n    constructor(props: {}) {\n        super(props);\n    }\n\n    state = {\n        char: {\n            name: null,\n            description: null,\n            thumbnail: null,\n            homePage: null,\n            wikiUrl: null,\n            id: null\n        },\n        loading: true,\n        error: false\n    }\n    timerId = null as NodeJS.Timeout | null;\n\n    componentDidMount() {\n        this.updateChar()\n        // this.timerId = setInterval(this.updateChar, 3000)\n    }\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId)\n        }\n    }\n\n    marvelService = new MarvelService()\n\n\n    onCharLoaded = (char: CharType) => {\n        this.setState({char, loading: false})\n    }\n\n\n    updateChar = (id: number = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)) => {\n        this.setState({loading: true})\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true})\n\n    }\n\n\n    render() {\n        const {char, loading, error} = this.state\n        const isLoading = loading ? <Spinner/> : <View char={char}/>\n        const errorMsg = error ? <ErrorMsg/> : isLoading\n\n        return (\n            <div className=\"randomchar\">\n                {errorMsg}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={() => this.updateChar()} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\ntype ViewPropsType = {\n    char: CharType\n}\n\n\nconst View = (char: ViewPropsType) => {\n\n    const {name, description, thumbnail, homePage, wikiUrl} = char.char;\n    const notAvailableImg = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    const real = thumbnail === notAvailableImg\n    const newImgStyle = real ? 'randomchar__badImg' : 'randomchar__img'\n\n\n    return (<div className=\"randomchar__block\">\n        <img src={thumbnail ? thumbnail : thor} alt=\"Random character\" className={newImgStyle}/>\n\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name ? name : 'Thor'}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a target={'_blank'} href={homePage ? homePage : '#'} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a target={'_blank'} href={wikiUrl ? wikiUrl : '#'} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default RandomChar;","export default __webpack_public_path__ + \"static/media/abyss.93d211d3.jpg\";","import './char.scss';\nimport abyss from '../../../resources/img/abyss.jpg';\nimport React, {Component} from 'react';\n\n\ntype CharPropsType = {\n    name: string | null\n    img: string | null\n    setSelectedChar: (id: number | null) => void\n    id: number | null\n    charId: number | null\n}\n\n\nclass Char extends Component<CharPropsType> {\n\n    render() {\n        const {name, img, setSelectedChar, id, charId} = this.props\n        const notAvailableImg = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n        const correctImgClass = img === notAvailableImg ? 'char__badItem' : 'char__item'\n        const activeItem = charId === id ? img === notAvailableImg ? 'char__badItem char_selected' : 'char__item char_selected' : correctImgClass\n\n\n        return (\n            <li onClick={() => {\n                setSelectedChar(id)\n            }} className={activeItem}>\n                <img src={img ? img : abyss} alt=\"abyss\"/>\n                <div className=\"char__name\">{name ? name : 'not found'}</div>\n            </li>\n        )\n    }\n}\n\nexport default Char;","import './charList.scss';\nimport Char from './char/Char';\nimport {Component} from 'react';\nimport {MarvelService} from '../../services/MarvelService';\nimport {CharType} from '../randomChar/RandomChar';\nimport Spinner from '../preloader/preloader';\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\n\ntype CharListStateType = {\n    charactersData: CharType[]\n    loading: boolean\n    error: boolean,\n    pageOffset: number\n    charEnded: boolean\n}\n\ntype CharListPropsType = {\n    setSelectedChar: (id: number | null) => void\n    charId:number|null\n}\n\n\nclass CharList extends Component<CharListPropsType, CharListStateType> {\n    marvelService = new MarvelService()\n    state = {\n        charactersData: [] as CharType[],\n        loading: true,\n        error: false,\n        pageOffset: this.marvelService._baseOffset,\n        charEnded: false\n    }\n\n\n    componentDidMount = () => {\n        this.updateCharListItem()\n    }\n\n    componentDidUpdate(prevProps: Readonly<CharListPropsType>, prevState: Readonly<CharListStateType>) {\n        {\n            prevState.pageOffset !== this.state.pageOffset && this.updateCharListItem()\n        }\n    }\n\n    onCharLoaded = (charactersData: CharType[]) => {\n        this.setState({charactersData, loading: false})\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true})\n    }\n\n    updateCharListItem = () => {\n        const {pageOffset} = this.state\n        this.setState({loading: true})\n        this.marvelService.getAllCharacters(pageOffset)\n            .then(res => {\n                {\n                    res.length < 9 && this.setState({charEnded: true})\n                }\n                {\n                    res.length === 9 && this.setState({charEnded: false})\n                }\n\n                this.onCharLoaded(res)\n            })\n            .catch(this.onError)\n    }\n    onClickLoadMoreBtnHandler = (offset: number) => {\n        this.setState(({pageOffset}) => ({pageOffset: pageOffset + offset}))\n    }\n\n\n    render() {\n\n        const {charactersData, loading, error, charEnded, pageOffset} = this.state\n        const {setSelectedChar,charId} = this.props\n\n        const correctBtnClassName = loading ? 'button button__secondary button__long' : 'button button__main button__long'\n\n\n        const isLoading = loading ? <div className={'spinerPage'}><Spinner/></div> :\n            <ul className=\"char__grid\"> {charactersData.map(t => <Char charId={charId}\n                                                                       key={t.id}\n                                                                       name={t.name}\n                                                                       img={t.thumbnail}\n                                                                       id={t.id}\n                                                                       setSelectedChar={setSelectedChar}/>)}</ul>\n\n\n        const isError = error ? <ErrorMsg/> : isLoading;\n\n\n        return (\n            <div className=\"char__list\">\n                {isError}\n                <div className={'btn_block'}>\n                    {pageOffset !== 210 && <button disabled={loading} onClick={() => this.onClickLoadMoreBtnHandler(-9)}\n                                                   className={correctBtnClassName}>\n                        <div className=\"inner\">Previous Page</div>\n                    </button>}\n                    {!charEnded && <button disabled={loading} onClick={() => this.onClickLoadMoreBtnHandler(9)}\n                                           className={correctBtnClassName}>\n                        <div className=\"inner\">Next page</div>\n                    </button>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './CharComicsItem.scss';\nimport {Component} from 'react';\nimport React from 'react';\nimport {ComicsItemsType} from '../CharInfo';\nimport Skeleton from '../../skeleton/Skeleton';\n\ntype CharComicsItemPropsType = {\n    comics:null|ComicsItemsType\n}\n\n\nexport class CharComicsItem extends Component<CharComicsItemPropsType, {}> {\n\n\n    render() {\n        const{comics}=this.props\n\n\n      if(comics){\n          return (\n              <>\n                  <li className=\"char__comics-item\">\n                      {comics.name}\n                  </li>\n              </>\n          )\n      }else{\n          return(<Skeleton/>\n          )\n      }\n\n\n\n    }\n}\n\n","import './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport {Component} from 'react';\nimport {MarvelService} from '../../services/MarvelService';\nimport {CharType} from '../randomChar/RandomChar';\nimport React from 'react';\nimport {CharComicsItem} from './CharComicsItem/CharComicsItem';\nimport Spinner from '../preloader/preloader';\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\n\n\ntype CharInfoPropsType = {\n    charId: number | null\n}\nexport type ComicsItemsType = {\n    resourceURI: string\n    name: string\n}\n\n\ntype CharInfoCharType = {\n    name: null | string\n    description: null | string\n    thumbnail: string | null\n    homePage: string | null\n    wikiUrl: string | null\n    id: number | null\n    comics: null | ComicsItemsType[] | []\n}\n\ntype CharInfoStateType = {\n    char: CharInfoCharType | null\n    loading: boolean\n    error: boolean\n}\n\ntype ViewCharInfoPropsType = {\n    char: CharInfoCharType\n}\n\n\nclass CharInfo extends Component<CharInfoPropsType, CharInfoStateType> {\n\n    state = {\n        char: {\n            name: null,\n            description: null,\n            thumbnail: null,\n            homePage: null,\n            wikiUrl: null,\n            id: null,\n            comics: null\n        } as CharInfoCharType,\n        loading: false,\n        error: false\n    }\n\n    constructor(props: CharInfoPropsType) {\n        super(props);\n\n\n    }\n\n    componentDidUpdate(prevProps: Readonly<CharInfoPropsType>, prevState: Readonly<CharInfoStateType>, snapshot?: any) {\n        if (prevProps !== this.props) {\n            this.updateChar()\n        }\n    }\n\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n\n        this.updateChar()\n    }\n\n\n    onCharLoaded = (char: CharInfoCharType) => {\n\n        this.setState({char, loading: false})\n    }\n\n\n    updateChar = () => {\n        this.setState({loading: true})\n        const {charId} = this.props\n\n\n        if (!charId) {\n            this.setState({loading: false})\n        }\n        {\n            charId && this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError)\n        }\n    }\n\n\n    onError = () => {\n        this.setState({loading: false, error: true})\n\n    }\n\n\n    render() {\n\n        const {char, loading, error} = this.state\n\n\n        const isLoading = loading ? <Spinner/> : char.comics || char.name ? <ViewCharInfo char={char}/> :\n            <CharComicsItem comics={null}/>\n\n\n        const isErrorMsg = error ? <ErrorMsg/> : isLoading\n\n        return (\n            <div className=\"char__info\">\n                {isErrorMsg}\n            </div>\n        )\n    }\n}\n\n\nconst ViewCharInfo = (props: ViewCharInfoPropsType) => {\n    const {char} = props\n    const {name, description, thumbnail, wikiUrl, comics, homePage} = char\n\n    const comicsItems = comics ? comics.length === 0 ? 'Can\\'t find anyone comics' : comics.map((t, i) => <CharComicsItem\n            key={i} comics={t}/>) :\n        <CharComicsItem comics={null}/>\n    const notAvailableImg = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    const correctImgClass = thumbnail === notAvailableImg ? 'char__badBasics' : 'char__basics'\n\n    return (\n        <>\n            <div className={correctImgClass}>\n                <img src={thumbnail ? thumbnail : thor} alt=\"abyss\"/>\n                <div>\n                    <div className=\"char__info-name\">{name ? name : 'No name'}</div>\n                    <div className=\"char__btns\">\n                        <a target={'_blank'} href={homePage ? homePage : '#'} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a target={'_blank'} href={wikiUrl ? wikiUrl : '#'} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description ? description : 'no description'}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comicsItems}\n            </ul>\n        </>\n    )\n\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from 'react';\r\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\r\n\r\n\r\ntype ErrorBoundaryStateType ={\r\n    error:boolean\r\n}\r\n\r\n\r\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryStateType> {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n\r\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n        console.log(errorInfo, error)\r\n        this.setState({error: true})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {error} = this.state\r\n        if(error){\r\n            return(\r\n           <ErrorMsg/>\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n\r\n    }\r\n}\r\n\r\n","import AppHeader from '../appHeader/AppHeader';\nimport RandomChar from '../randomChar/RandomChar';\nimport CharList from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport decoration from '../../resources/img/vision.png';\nimport {Component} from 'react';\nimport {ErrorBoundary} from '../errorBoundary/ErrorBoundary';\n\ntype AppStateType = {\n    selectedChar: number | null\n}\n\n\nclass App extends Component<{}, AppStateType> {\n\n    state = {\n        selectedChar: null as null | number\n    }\n\n    setSelectedChar = (id: number | null) => {\n        this.setState({selectedChar: id})\n    }\n\n\n    render() {\n        const {selectedChar} = this.state\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList charId={selectedChar} setSelectedChar={this.setSelectedChar}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}