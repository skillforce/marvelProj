{"version":3,"sources":["components/ErrorMsg/ErrorMsg.module.scss","resources/img/thor.jpeg","resources/img/mjolnir.png","services/MarvelService.tsx","hooks/http.hook.ts","components/preloader/preloader.tsx","components/ErrorMsg/error.gif","components/ErrorMsg/ErrorMsg.tsx","components/randomChar/RandomChar.tsx","resources/img/abyss.jpg","components/charList/char/Char.tsx","components/charList/CharList.tsx","components/skeleton/Skeleton.tsx","components/charInfo/CharComicsItem/CharComicsItem.tsx","components/charInfo/CharInfo.tsx","resources/img/vision.png","components/errorBoundary/ErrorBoundary.tsx","components/app/CharPage.tsx","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.tsx","components/ComicsList/ComicsList.tsx","components/app/ComicsPage.tsx","resources/img/x-men.png","components/singleComic/SingleComic.tsx","Routes/Routes.tsx","components/appHeader/AppHeader.tsx","components/app/App.tsx","index.tsx"],"names":["module","exports","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","res","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","comics","title","description","pageCount","thumbnail","path","extension","language","textObjects","price","prices","character","name","urls","correctThumbNail","correctComicsItems","items","length","slice","homePage","wikiUrl","_baseOffset","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorImg","s","ErrorMsg","className","src","alt","RandomChar","char","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","isLoading","errorMsg","onClick","mjolnir","View","newImgStyle","thor","target","href","Char","props","img","setSelectedChar","notAvailableImg","activeItem","charId","abyss","CharList","charactersData","setCharactersData","pageOffset","setPageOffSet","charEnded","setCharEnded","updateCharListItem","onClickLoadMoreBtnHandler","correctBtnClassName","t","isError","disabled","Skeleton","CharComicsItem","ViewCharInfo","comicsItems","i","correctImgClass","CharInfo","isErrorMsg","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","CharPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","onRequest","initial","onComicsListLoaded","newComicsList","ended","arr","item","to","PATH","SINGLECOMIC","renderItems","errorMessage","spinner","ComicsPage","SingleComic","xMen","COMICS","CHARPAGE","RoutesInfo","element","replace","AppHeader","isActive","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.558e6e76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorImg\":\"ErrorMsg_ErrorImg__3obQu\"};","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useHttp} from '../hooks/http.hook';\r\n\r\nexport const useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = '0683f9118f5881e432d90247cd0fc519';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset: number = _baseOffset) => {\r\n        const res: any = await request(`${_apiBase}characters?limit=9&offset=${offset}&apikey=${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id: number) => {\r\n        const res = await request(`${_apiBase}characters/${id}?apikey=${_apiKey}`);\r\n        return _transformCharacter(res)\r\n    }\r\n\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&apikey=${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id:number) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n\r\n    const _transformComics = (comics: any) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (res: any) => {\r\n        let character = res.data ? res.data.results[0] : res\r\n        const {name, description, thumbnail, urls, id, comics} = character\r\n        const correctThumbNail = `${thumbnail.path}.${thumbnail.extension}`\r\n\r\n        const correctComicsItems = comics.items.length > 10 ? comics.items.slice(0, 10) : comics.items\r\n        const correctDescription = description ? `${description.slice(0, 210)}...` : 'There is no description for this character'\r\n\r\n        return {\r\n            name,\r\n            description: correctDescription,\r\n            thumbnail: correctThumbNail,\r\n            homePage: urls[0].url,\r\n            wikiUrl: urls[1].url,\r\n            id,\r\n            comics: correctComicsItems\r\n        }\r\n    }\r\n\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, _baseOffset, clearError, getAllComics,getComics}\r\n}","import {useState, useCallback} from 'react';\r\n\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setLoading(true)\r\n        try {\r\n            const res = await fetch(url, {method, body, headers});\r\n            if (!res.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n            }\r\n            const data = await res.json();\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch (e) {\r\n            if (e instanceof Error) {\r\n                setLoading(false);\r\n                setError(e.message);\r\n                throw e;\r\n            }\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n\r\n}","export const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}}\r\n             width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\r\n                                 values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\nimport s from './ErrorMsg.module.scss';\r\n\r\nconst {ErrorImg} = s;\r\n\r\n\r\nexport const ErrorMsg = () => {\r\n    return <img className={ErrorImg} src={error} alt={'errorMsg'}/>\r\n}","import './randomChar.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport React, {useEffect, useState} from 'react';\nimport {useMarvelService} from '../../services/MarvelService';\nimport Spinner from '../preloader/preloader';\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\n\n\nexport type CharType = {\n    name: null | string\n    description: null | string\n    thumbnail: string | null\n    homePage: string | null\n    wikiUrl: string | null\n    id: number | null\n}\n\n\nexport const RandomChar = () => {\n\n    const {loading, error, getCharacter,clearError} = useMarvelService()\n\n    const [char, setChar] = useState<CharType>({\n        name: null,\n        description: null,\n        thumbnail: null,\n        homePage: null,\n        wikiUrl: null,\n        id: null\n    })\n\n\n    useEffect(() => {\n        updateChar()\n    }, [])\n\n\n    const onCharLoaded = (char: CharType) => {\n        setChar(char);\n    }\n\n    const updateChar = (id: number = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)) => {\n        clearError()\n        getCharacter(id).then(onCharLoaded)\n    }\n\n\n    const isLoading = loading ? <Spinner/> : <View char={char}/>\n    const errorMsg = error ? <ErrorMsg/> : isLoading\n\n    return (\n        <div className=\"randomchar\">\n            {errorMsg}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={() => updateChar()} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n\n}\n\ntype ViewPropsType = {\n    char: CharType\n}\n\n\nconst View = (char: ViewPropsType) => {\n\n    const {name, description, thumbnail, homePage, wikiUrl} = char.char;\n    const notAvailableImg = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    const real = thumbnail === notAvailableImg\n    const newImgStyle = real ? 'randomchar__badImg' : 'randomchar__img'\n\n\n    return (<div className=\"randomchar__block\">\n        <img src={thumbnail ? thumbnail : thor} alt=\"Random character\" className={newImgStyle}/>\n\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name ? name : 'Thor'}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a target={'_blank'} href={homePage ? homePage : '#'} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a target={'_blank'} href={wikiUrl ? wikiUrl : '#'} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>)\n}\n\n","export default __webpack_public_path__ + \"static/media/abyss.93d211d3.jpg\";","import './char.scss';\nimport abyss from '../../../resources/img/abyss.jpg';\nimport React from 'react';\n\n\ntype CharPropsType = {\n    name: string | null\n    img: string | null\n    setSelectedChar: (id: number | null) => void\n    id: number | null\n    charId: number | null\n}\n\n\nexport const Char = (props: CharPropsType) => {\n    const {name, img, setSelectedChar, id, charId} = props;\n    const notAvailableImg = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    const correctImgClass = img === notAvailableImg ? 'char__badItem' : 'char__item'\n    const activeItem = charId === id ? img === notAvailableImg ? 'char__badItem char_selected' : 'char__item char_selected' : correctImgClass\n    return (\n        <li onClick={() => {\n            setSelectedChar(id)\n        }} className={activeItem}>\n            <img src={img ? img : abyss} alt=\"abyss\"/>\n            <div className=\"char__name\">{name ? name : 'not found'}</div>\n        </li>\n    )\n}\n","import './charList.scss';\nimport {Char} from './char/Char';\nimport React, {useEffect, useState} from 'react';\nimport {useMarvelService} from '../../services/MarvelService';\nimport {CharType} from '../randomChar/RandomChar';\nimport Spinner from '../preloader/preloader';\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\n\n\ntype CharListPropsType = {\n    setSelectedChar: (id: number | null) => void\n    charId: number | null\n}\n\n\nexport const CharList = (props: CharListPropsType) => {\n    const {setSelectedChar, charId} = props\n    const {getAllCharacters,loading,error,_baseOffset,clearError} = useMarvelService()\n    const [charactersData, setCharactersData] = useState<CharType[]>([])\n    const [pageOffset, setPageOffSet] = useState<number>(_baseOffset)\n    const [charEnded, setCharEnded] = useState<boolean>(false)\n\n\n    useEffect(() => {\n        updateCharListItem()\n    }, [pageOffset])\n\n    const onCharLoaded = (charactersData: CharType[]) => {\n        setCharactersData(charactersData)\n    }\n\n\n    const updateCharListItem = () => {\n        clearError()\n         getAllCharacters(pageOffset)\n            .then(res => {\n                {\n                    res.length < 9 && setCharEnded(true);\n                }\n                {\n                    res.length === 9 && setCharEnded(false);\n                }\n\n                onCharLoaded(res)\n            })\n    }\n\n    const onClickLoadMoreBtnHandler = (offset: number) => {\n        setPageOffSet((pageOffset) => pageOffset + offset)\n    }\n\n    const correctBtnClassName = loading ? 'button button__secondary button__long' : 'button button__main button__long'\n\n\n    const isLoading = loading ? <div className={'spinerPage'}><Spinner/></div> :\n        <ul className=\"char__grid\"> {charactersData.map(t => <Char charId={charId}\n                                                                   key={t.id}\n                                                                   name={t.name}\n                                                                   img={t.thumbnail}\n                                                                   id={t.id}\n                                                                   setSelectedChar={setSelectedChar}/>)}</ul>\n\n\n    const isError = error ? <ErrorMsg/> : isLoading;\n\n    return (\n        <div className=\"char__list\">\n            {isError}\n            <div className={'btn_block'}>\n                {pageOffset !== 210 && <button disabled={loading} onClick={() => onClickLoadMoreBtnHandler(-9)}\n                                               className={correctBtnClassName}>\n                    <div className=\"inner\">Previous Page</div>\n                </button>}\n                {!charEnded && <button disabled={loading} onClick={() => onClickLoadMoreBtnHandler(9)}\n                                       className={correctBtnClassName}>\n                    <div className=\"inner\">Next page</div>\n                </button>}\n            </div>\n        </div>\n    )\n}\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './CharComicsItem.scss';\nimport React from 'react';\nimport {ComicsItemsType} from '../CharInfo';\nimport Skeleton from '../../skeleton/Skeleton';\n\ntype CharComicsItemPropsType = {\n    comics: null | ComicsItemsType\n}\n\n\nexport const CharComicsItem = (props: CharComicsItemPropsType) => {\n    const {comics} = props;\n\n    if (comics) {\n        return (\n            <>\n                <li className=\"char__comics-item\">\n                    {comics.name}\n                </li>\n            </>\n        )\n    } else {\n        return (<Skeleton/>\n        )\n    }\n}\n\n","import './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport React, {useEffect, useState} from 'react';\nimport {useMarvelService} from '../../services/MarvelService';\nimport {CharComicsItem} from './CharComicsItem/CharComicsItem';\nimport Spinner from '../preloader/preloader';\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\n\n\ntype CharInfoPropsType = {\n    charId: number | null\n}\nexport type ComicsItemsType = {\n    resourceURI: string\n    name: string\n}\n\n\ntype CharInfoCharType = {\n    name: null | string\n    description: null | string\n    thumbnail: string | null\n    homePage: string | null\n    wikiUrl: string | null\n    id: number | null\n    comics: null | ComicsItemsType[] | []\n}\n\n\ntype ViewCharInfoPropsType = {\n    char: CharInfoCharType\n}\n\n\nexport const CharInfo = (props: CharInfoPropsType) => {\n    const {charId} = props\n    const {error, loading, getCharacter,clearError} = useMarvelService()\n    const [char, setChar] = useState<CharInfoCharType>({\n        name: null,\n        description: null,\n        thumbnail: null,\n        homePage: null,\n        wikiUrl: null,\n        id: null,\n        comics: null\n    })\n\n\n    const onCharLoaded = (char: CharInfoCharType) => {\n        setChar(char)\n    }\n\n    useEffect(() => {\n        updateChar()\n    }, [charId])\n\n\n    const updateChar = () => {\n        clearError()\n        {\n            charId && getCharacter(charId).then(onCharLoaded)\n        }\n    }\n\n    const isLoading = loading ? <Spinner/> : char.comics || char.name ? <ViewCharInfo char={char}/> :\n        <CharComicsItem comics={null}/>\n\n\n    const isErrorMsg = error ? <ErrorMsg/> : isLoading\n\n    return (<div className=\"char__info\">\n        {isErrorMsg}\n    </div>)\n}\n\n\nconst ViewCharInfo = (props: ViewCharInfoPropsType) => {\n    const {char} = props\n    const {name, description, thumbnail, wikiUrl, comics, homePage} = char\n\n    const comicsItems = comics ? comics.length === 0 ? 'Can\\'t find anyone comics' : comics.map((t, i) =>\n            <CharComicsItem\n                key={i} comics={t}/>) :\n        <CharComicsItem comics={null}/>\n    const notAvailableImg = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    const correctImgClass = thumbnail === notAvailableImg ? 'char__badBasics' : 'char__basics'\n\n    return (\n        <>\n            <div className={correctImgClass}>\n                <img src={thumbnail ? thumbnail : thor} alt=\"abyss\"/>\n                <div>\n                    <div className=\"char__info-name\">{name ? name : 'No name'}</div>\n                    <div className=\"char__btns\">\n                        <a target={'_blank'} href={homePage ? homePage : '#'} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a target={'_blank'} href={wikiUrl ? wikiUrl : '#'} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description ? description : 'no description'}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comicsItems}\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from 'react';\r\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\r\n\r\n\r\ntype ErrorBoundaryStateType = {\r\n    error: boolean\r\n}\r\n\r\n\r\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryStateType> {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n\r\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n        console.log(errorInfo, error)\r\n        this.setState({error: true})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {error} = this.state\r\n        if (error) {\r\n            return (\r\n                <ErrorMsg/>\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n\r\n    }\r\n}\r\n\r\n","import {RandomChar} from '../randomChar/RandomChar';\r\nimport {CharList} from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport decoration from '../../resources/img/vision.png';\r\nimport React, {useState} from 'react';\r\nimport {ErrorBoundary} from '../errorBoundary/ErrorBoundary';\r\n\r\n\r\nexport const CharPage = () => {\r\n\r\n\r\n    const [selectedChar, setChar] = useState<number | null>(null)\r\n\r\n\r\n    const setSelectedChar = (id: number | null) => setChar(id)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList charId={selectedChar} setSelectedChar={setSelectedChar}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\nimport React from 'react';\n\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState, useEffect} from 'react';\r\nimport {useMarvelService} from '../../services/MarvelService';\r\nimport Spinner from '../preloader/preloader';\r\nimport {ErrorMsg} from '../ErrorMsg/ErrorMsg';\r\n\r\nimport './ComicsList.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../Routes/Routes';\r\n\r\ntype OneComicsType = {\r\n    id: number,\r\n    title: string,\r\n    description: string,\r\n    pageCount: number | string,\r\n    thumbnail: string,\r\n    language: string,\r\n    price: string\r\n}\r\n\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState<OneComicsType[]>([]);\r\n    const [newItemLoading, setNewItemLoading] = useState<boolean>(false);\r\n    const [offset, setOffset] = useState<number>(0);\r\n    const [comicsEnded, setComicsEnded] = useState<boolean>(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset: number, initial: boolean = false) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList: OneComicsType[]) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems(arr: OneComicsType[]) {\r\n        const items = arr.map((item: OneComicsType, i: number) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <NavLink to={PATH.SINGLECOMIC}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMsg/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                disabled={newItemLoading}\r\n                style={{'display': comicsEnded ? 'none' : 'block'}}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../ComicsList/ComicsList';\r\n\r\nexport const ComicsPage = () => {\r\n    return (\r\n        <div>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","import './singleComic.scss';\nimport xMen from '../../resources/img/x-men.png';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../Routes/Routes';\n\nconst SingleComic = () => {\n    return (\n        <div className=\"single-comic\">\n            <img src={xMen} alt=\"x-men\" className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">X-Men: Days of Future Past</h2>\n                <p className=\"single-comic__descr\">Re-live the legendary first journey into the dystopian future of 2013\n                    - where Sentinels stalk the Earth, and the X-Men are humanity's only hope...until they die! Also\n                    featuring the first appearance of Alpha Flight, the return of the Wendigo, the history of the X-Men\n                    from Cyclops himself...and a demon for Christmas!?</p>\n                <p className=\"single-comic__descr\">144 pages</p>\n                <p className=\"single-comic__descr\">Language: en-us</p>\n                <div className=\"single-comic__price\">9.99$</div>\n            </div>\n            <NavLink to={PATH.COMICS} className=\"single-comic__back\">Back to all</NavLink>\n        </div>\n    )\n}\n\nexport default SingleComic;","import {Navigate, Route, Routes} from 'react-router-dom';\r\nimport {CharPage} from '../components/app/CharPage';\r\nimport ComicsList from '../components/ComicsList/ComicsList';\r\nimport {ComicsPage} from '../components/app/ComicsPage';\r\nimport SingleComic from '../components/singleComic/SingleComic';\r\n\r\nexport const PATH = {\r\n    COMICS: '/comics',\r\n    CHARPAGE: '/characters',\r\n    SINGLECOMIC: '/singleComic'\r\n}\r\n\r\n\r\nexport const RoutesInfo = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/'} element={<Navigate replace to={PATH.CHARPAGE}/>}/>\r\n                <Route path={PATH.CHARPAGE} element={<CharPage/>}/>\r\n                <Route path={PATH.COMICS} element={<ComicsPage/>}/>\r\n                <Route path={PATH.SINGLECOMIC} element={<SingleComic/>}/>\r\n\r\n\r\n                {/*<Route path={\"*\"} element={<Error404/>}/>*/}\r\n            </Routes>\r\n        </div>\r\n\r\n    )\r\n}","import './appHeader.scss';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../Routes/Routes';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <NavLink to={PATH.CHARPAGE} className={({isActive}) =>\n                            isActive ? 'app__activeLink' : 'app__link'}>Characters</NavLink>\n                    </li>\n                    /\n                    <li>\n                        <NavLink to={PATH.COMICS} className={({isActive}) =>\n                            isActive ? 'app__activeLink' : 'app__link'}>Comics</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import AppHeader from '../appHeader/AppHeader';\nimport {RandomChar} from '../randomChar/RandomChar';\nimport {CharList} from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport decoration from '../../resources/img/vision.png';\nimport React, {useState} from 'react';\nimport {ErrorBoundary} from '../errorBoundary/ErrorBoundary';\nimport ComicsList from '../ComicsList/ComicsList';\nimport {RoutesInfo} from '../../Routes/Routes';\n\n\nexport const App = () => {\n\n\n    const [selectedChar, setChar] = useState<number | null>(null)\n\n\n    const setSelectedChar = (id: number | null) => setChar(id)\n\n\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <RoutesInfo/>\n            </main>\n\n        </div>\n    )\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\n\n\n\nReactDOM.render(\n      <Router>\n    <App />\n      </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}